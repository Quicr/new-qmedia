//Protobuf encoding of channel content

syntax = "proto3";

package media_message;

enum MediaType {
  OPUS_40K_20MS = 0; // 40 Kbps at 20 ms packet time
  H264 = 1;
  L16 = 2;
  F32 = 3;
  RAW = 4;
}

enum PacketizeType {
  None = 0;
  Simple = 1;
}

// E2E Authenticated header per media packet
message MediaDataHeader {
  MediaType mediaType = 1;
  uint64  sourceID = 2;            // audio/video/... unique source identifier
  fixed64 sourceRecordTime = 3;    // nanoseconds since unix epoch
  uint64  encodedSeqNumber = 4;

  oneof header {
    Video video_header = 8;
  }

  // Video payload Header
  message Video {
    bool intraFrame = 2;
    bool discardable = 3;
    uint32 spatialLayerId = 4;
    uint32 temporalLayerId = 5;
  }
}

// Container for carrying media data
message MediaData {
  MediaDataHeader header = 1; // authenticated not encrypted
  bytes encryptedMediaData = 2; // encrypted data
}

// Top level protocol message container
message StreamMessage {
  uint64 conference_id = 1;
  uint64 client_id = 2;

  oneof payload {
    StreamContent stream_content = 5;
  }

  message StreamContent {
    repeated MediaData mediaData = 1;
  }
}